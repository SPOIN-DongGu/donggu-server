name: CD with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: "adopt"

    - name: Make application.yml
      run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > ./application.yml
      shell: bash

    - name: Build with Gradle
      run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

    - name: Docker login
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Docker build & push to docker repo
      run: |
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}:latest .
          docker push ${{ secrets.DOCKER_REPO }}:latest

    - name: Get GitHub Actions Public IP
      id: get-ip
      uses: haythem/public-ip@v1.2

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_NAME }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Allow GitHub Actions IP in Security Group
      run: |
        aws ec2 authorize-security-group-ingress \
          --group-id ${{ secrets.AWS_SG_ID }} \
          --protocol tcp \
          --port 22 \
          --cidr ${{ steps.get-ip.outputs.ipv4 }}/32

    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          RUNNING_CONTAINERS=$(sudo docker ps -q --filter "name=^(?!.*redis).*$")
          if [ ! -z "$RUNNING_CONTAINERS" ]; then
            sudo docker rm -f $RUNNING_CONTAINERS
          fi
          sudo docker pull ${{ secrets.DOCKER_REPO }}:latest
          sudo docker compose up -d
          sudo docker image prune -f

    - name: Remove GitHub Actions IP from Security Group
      run: |
        aws ec2 revoke-security-group-ingress \
          --group-id ${{ secrets.AWS_SG_ID }} \
          --protocol tcp \
          --port 22 \
          --cidr ${{ steps.get-ip.outputs.ipv4 }}/32